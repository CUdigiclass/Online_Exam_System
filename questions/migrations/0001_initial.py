# Generated by Django 4.2.2 on 2023-08-01 15:03

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Acourse",
            fields=[
                (
                    "courseid",
                    models.AutoField(
                        db_column="CourseId", primary_key=True, serialize=False
                    ),
                ),
                (
                    "coursename",
                    models.CharField(
                        blank=True, db_column="CourseName", max_length=200, null=True
                    ),
                ),
                ("coursecode", models.CharField(db_column="CourseCode", max_length=10)),
                (
                    "descriptions",
                    models.CharField(
                        blank=True, db_column="Descriptions", max_length=250, null=True
                    ),
                ),
                (
                    "bannerimagename",
                    models.CharField(
                        blank=True,
                        db_column="BannerImageName",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("coursesession", models.IntegerField(db_column="CourseSession")),
                ("programtype", models.IntegerField(db_column="ProgramType")),
                ("isdeleted", models.BooleanField(db_column="IsDeleted")),
                ("isactive", models.BooleanField(db_column="IsActive")),
                ("semester", models.IntegerField(db_column="Semester")),
            ],
            options={
                "db_table": "ACourse",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Configuration",
            fields=[
                (
                    "configurationid",
                    models.AutoField(
                        db_column="ConfigurationId", primary_key=True, serialize=False
                    ),
                ),
                ("moduleid", models.IntegerField(db_column="ModuleId")),
                (
                    "value",
                    models.CharField(
                        blank=True, db_column="Value", max_length=250, null=True
                    ),
                ),
                ("isactivesession", models.BooleanField(db_column="IsActiveSession")),
            ],
            options={
                "db_table": "Configuration",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("exam_name", models.CharField(max_length=100, unique=True)),
                ("exam_description", models.CharField(blank=True, max_length=100)),
                ("exam_start_date", models.DateTimeField(blank=True)),
                ("exam_duration", models.IntegerField(blank=True)),
                ("exam_status", models.BooleanField(default=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "exam",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("question_name", models.TextField(max_length=200)),
                ("question_text", models.TextField(max_length=200)),
                ("option1", models.TextField(max_length=100)),
                ("option2", models.TextField(max_length=100)),
                ("option3", models.TextField(max_length=100)),
                ("option4", models.TextField(max_length=100)),
                ("correct_answer", models.TextField(max_length=100)),
                (
                    "userid",
                    models.CharField(
                        blank=True, db_column="UserId", max_length=200, null=True
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, db_column="UserName", max_length=200, null=True
                    ),
                ),
                (
                    "isdeleted",
                    models.BooleanField(blank=True, db_column="IsDeleted", null=True),
                ),
                (
                    "isactive",
                    models.BooleanField(blank=True, db_column="IsActive", null=True),
                ),
                (
                    "descriptions",
                    models.CharField(
                        blank=True, db_column="Descriptions", max_length=200, null=True
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True, db_column="Comments", max_length=200, null=True
                    ),
                ),
                (
                    "lastmodifiedby",
                    models.CharField(
                        blank=True,
                        db_column="LastModifiedBy",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "lastmodifiedon",
                    models.DateTimeField(
                        blank=True, db_column="LastModifiedOn", null=True
                    ),
                ),
                (
                    "firstenteredby",
                    models.CharField(
                        blank=True,
                        db_column="FirstEnteredBy",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "firstenteredon",
                    models.DateTimeField(
                        blank=True, db_column="FirstEnteredOn", null=True
                    ),
                ),
            ],
            options={
                "db_table": "question",
                "managed": False,
            },
        ),
    ]
